{{#section 'css'}}
    <link href="https://fonts.googleapis.com/css?family=Sriracha" rel="stylesheet">
    <link rel="stylesheet" href="/public/CSS/vwLearner/topicTest.css">
{{/section}}

{{#section 'js'}}
    <script>
        const questions = document.getElementById('question-form').querySelectorAll('.question');
        let totalCorrect = 0;
        let currentQuestionIndex = 0;
        const totalQuestions = {{this.question.length}};
        const topicid = "{{this.topicid}}";
        const listAnswer = []
        const prevButton = document.getElementById('prev-btn');
        const nextButton = document.getElementById('next-btn');
        const endButton = document.getElementById('end-btn');
        const hideAllQuestions = () => {
            const questions = document.getElementsByClassName('question');
            for (let i = 1; i < questions.length; i++) {
                questions[i].classList.add('d-none');
            }
        }

        const hideQuestion = (index) => {
            const questions = document.getElementsByClassName('question');
            questions[index].classList.add('d-none');
        }

        const showQuestion = (index) => {
            var percentage = Math.floor(((currentQuestionIndex + 1) / totalQuestions) * 100)
            $('.progress-bar').css('width', `${percentage}%`)
            $('.progress-bar').attr('aria-valuenow', percentage)
            const questions = document.getElementsByClassName('question');
            questions[index].classList.remove('d-none');
        }

        const updateButtons = (index) => {
            prevButton.disabled = (index === 0);
            nextButton.disabled = (index === totalQuestions - 1);
            if (nextButton.disabled) {
                endButton.style.display = 'block';
            } else {
                endButton.style.display = 'none';
            }
        }

        function sendAnswersToDatabase() {
            if (listAnswer.length != totalQuestions) {
                alert('There are still unfinished questions');
                return;
            }
            const data = {
                topicid: topicid,
                totalQuestions: totalQuestions,
                totalCorrect: totalCorrect,
                answers: listAnswer,
            };
            fetch('/topic/test/submit-answers', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                    .then(response => response.text()) // Use response.text() instead of response.json()
                    .then(html => {
                        // Insert the HTML response into the DOM
                        document.body.innerHTML = html;
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });

        }

        const goToNextQuestion = () => {
            hideQuestion(currentQuestionIndex);
            currentQuestionIndex++;
            showQuestion(currentQuestionIndex);
            updateButtons(currentQuestionIndex);
        }

        const goToPrevQuestion = () => {
            hideQuestion(currentQuestionIndex);
            currentQuestionIndex--;
            showQuestion(currentQuestionIndex);
            updateButtons(currentQuestionIndex);
        }

        document.addEventListener("keydown", function(event) {
            if (event.code === "ArrowRight") {
                if (currentQuestionIndex !== totalQuestions - 1) {
                    goToNextQuestion();
                }
            } else if (event.code === "ArrowLeft") {
                if (currentQuestionIndex !== 0 ) {
                    goToPrevQuestion();
                }
            }
        });

        nextButton.addEventListener('click', goToNextQuestion);
        prevButton.addEventListener('click', goToPrevQuestion);
        endButton.addEventListener('click', sendAnswersToDatabase);

        hideAllQuestions()
        // show the first question and update the buttons
        showQuestion(currentQuestionIndex);
        updateButtons(currentQuestionIndex);

        const options = document.querySelectorAll('#options span');

        // Add a click event listener to each option
        options.forEach(option => {
            option.addEventListener('click', () => {
                // Get the correct answer for this question
                const tempAnswer = questions[currentQuestionIndex].querySelector('.answer')
                const correctAnswer = tempAnswer.textContent;

                const tempQuestionID = questions[currentQuestionIndex].querySelector('.id')
                const questionID = tempQuestionID.textContent;


                // Get the selected answer
                const selectedAnswer = option.textContent.substring(3);


                const isCorrect = selectedAnswer === correctAnswer;
                const parent = option.parentNode;
                const cell = parent.querySelector(`div[value="${selectedAnswer}"]`);
                const spanOptionA = parent.querySelector('.spanOptionA');
                const OptionA = spanOptionA.textContent.substring(3);

                const spanOptionB = parent.querySelector('.spanOptionB');
                const OptionB = spanOptionB.textContent.substring(3);

                const spanOptionC = parent.querySelector('.spanOptionC');
                const OptionC = spanOptionC.textContent.substring(3);

                const spanOptionD = parent.querySelector('.spanOptionD');
                const OptionD = spanOptionD.textContent.substring(3);


                cell.style.background = isCorrect ? 'rgb(43,190,28)' : 'rgb(231,75,75)';
                option.style.color = 'rgb(255,255,255)'
                option.style.fontWeight = 'bold'

                if (isCorrect) {
                    totalCorrect++;
                }

                options.forEach(otherOption => {
                    if (otherOption !== option && otherOption.parentNode === option.parentNode) {
                        otherOption.removeEventListener('click', () => {
                        });
                        otherOption.style.pointerEvents = 'none'; // Disable pointer events on span elements
                    }
                });

                const answer = {
                    questionID: questionID,
                    optiona: OptionA,
                    optionb: OptionB,
                    optionc: OptionC,
                    optiond: OptionD,
                    userchoose: selectedAnswer,
                }
                listAnswer.push(answer)
            });
        });
    </script>
{{/section}}

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-2"></div>
        <div class="col-sm-8">
    {{#if this.empty}}
            <div class="p-2 m-0 text-center question-name-1">No test in this topic</div>
    {{else}}
        <div class="progress">
            <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0"
                 aria-valuemax="100"></div>
        </div>
        <div id="question-form">
            {{#each this.question}}
                {{#ifEquals  this.QuestionAvatar ""}}
                    <div class="question" id="question{{@index}}">
                        <div class="p-2 m-0 text-center question-name-1">{{{Question}}}</div>
                        <div class="id" style="display: none">{{QuestionID}}</div>
                        <div class="answer" style="display: none">{{Answer}}</div>

                        <div class="" id="options">
                            <div class="divOptionA" value={{OptionA}}></div>
                            <div class="divOptionB" value={{OptionB}}></div>
                            <div class="divOptionC" value={{OptionC}}></div>
                            <div class="divOptionD" value={{OptionD}}></div>
                            <span class="spanOptionA">A. {{OptionA}}</span>
                            <span class="spanOptionB">B. {{OptionB}}</span>
                            <span class="spanOptionC">C. {{OptionC}}</span>
                            <span class="spanOptionD">D. {{OptionD}}</span>
                        </div>

                    </div>
                {{else}}
                    <div class="question" id="question{{@index}}">
                        <div class="p-2 m-0 text-center question-name">{{{Question}}}</div>
                        <div class="id" style="display: none">{{QuestionID}}</div>
                        <div class="answer" style="display: none">{{Answer}}</div>

                        <div class="" id="options">
                            <div class="img-wrapper">
                                <img src="{{QuestionAvatar}}" alt="Question Avatar">
                            </div>
                            <div class="divOptionA" value={{OptionA}}></div>
                            <div class="divOptionB" value={{OptionB}}></div>
                            <div class="divOptionC" value={{OptionC}}></div>
                            <div class="divOptionD" value={{OptionD}}></div>
                            <span class="spanOptionA">A. {{OptionA}}</span>
                            <span class="spanOptionB">B. {{OptionB}}</span>
                            <span class="spanOptionC">C. {{OptionC}}</span>
                            <span class="spanOptionD">D. {{OptionD}}</span>
                        </div>

                    </div>
                {{/ifEquals}}



            {{/each}}
        </div>
    {{/if}}


        </div>
    </div>

</div>
<button type="button" class="btn btn-primary" id="prev-btn" disabled>
    <i class="bi bi-arrow-left text-dark"></i>
</button>
<button type="button" class="btn btn-primary" id="next-btn" disabled>
    <i class="bi bi-arrow-right text-dark"></i>
</button>
<button type="button" class="btn btn-primary" id="end-btn" style="display:none;">End</button>