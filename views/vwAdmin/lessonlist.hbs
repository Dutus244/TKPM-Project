{{#section 'js'}}
<script>
  const lessonlist = {{{ lesson }}}
  const length = lessonlist.length

  $(document).ready(function () {
    //don't show table if there is no lesson
    if (lessonlist.length == 0) {
      $('.lesson-container table').hide();
    }
    if (lessonlist.length == 0 || lessonlist.length == 1)
      $('#lessoncount').text("Total lesson: " + lessonlist.length);
    else
      $('#lessoncount').text("Total lessons: " + lessonlist.length);

    //add button
    $('.lesson-container .btnAdd').on('click', async function () {
      window.location.href = "/admin/addlesson";
    });
  });
</script>
<script>
  const lessoncontainer = $('#lessonTableBody');
  const itemsPerPage = 5;
  let currentPage = 1;
  let totalPages = Math.ceil(lessonlist.length / itemsPerPage);

  // Display lessons for the current page
  function displayLessons() {
    lessoncontainer.empty();
    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = startIndex + itemsPerPage;
    const lessonsForCurrentPage = lessonlist.slice(startIndex, endIndex);

    lessonsForCurrentPage.forEach(function (lesson) {
      const row = $('<tr>');
      const id = $('<td>').text(lesson.lessonid);
      const name = $('<td>').text(lesson.lessonname);
      const editTopicButton = $('<button>').attr('type', 'button').addClass('btnEdit').text('Edit');
      editTopicButton.on('click', function () {
        window.location.href = '/admin/lessondetail/' + lesson.lessonid;
      });
      const edit = $('<td>')
      edit.append(editTopicButton);
      row.append(id);
      row.append(name);
      row.append(edit);
      lessoncontainer.append(row);
    });

    updatePagination();
  }

  // Update the pagination buttons and current page number
  function updatePagination() {
    const previousPageButton = $('.previous-page');
    const nextPageButton = $('.next-page');
    const currentPageDiv = $('.current-page');

    currentPageDiv.text(`Page ${currentPage} of ${totalPages}`);

    if (currentPage === 1) {
      previousPageButton.prop('disabled', true);
    } else {
      previousPageButton.prop('disabled', false);
    }

    if (currentPage === totalPages) {
      nextPageButton.prop('disabled', true);
    } else {
      nextPageButton.prop('disabled', false);
    }
  }

  // Handle clicking the previous page button
  $('.previous-page').on('click', function () {
    if (currentPage > 1) {
      currentPage--;
      displayLessons();
    }
  });

  // Handle clicking the next page button
  $('.next-page').on('click', function () {
    if (currentPage < totalPages) {
      currentPage++;
      displayLessons();
    }
  });

  // Initialize the table with the first page of lessons
  displayLessons();

</script>
{{/section}}

{{#section 'css'}}
<link rel="stylesheet" href="/public/CSS/admin/lessonlist.css">
<link rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.5.2/css/fileinput.min.css"
  integrity="sha512-sHiVTDN234pgseKqjDwH39VjS9DkyffX4S00kuAWWq+FrTq7HlFjPoWbfX/QFAxkdG9i9/1ftdG2sS+XWLcJmw=="
  crossorigin="anonymous" referrerpolicy="no-referrer" />

{{/section}}


<main>
  <div class="lesson-list-container">
    <div id="lessonname">LESSON LIST</div>
    <div class="lesson-container">
      <div id="lessoncount" class="title">Topic count: </div>
      <button type="button" class="btnAdd">
        Add
      </button>
      <table class="table table-striped table-bordered">
        <thead>
          <tr>
            <th>Lesson ID</th>
            <th>Lesson Name</th>
            <th>Edit</th>
          </tr>
        </thead>
        <tbody id="lessonTableBody">
        </tbody>
      </table>

      <div class="pagination">
        <button class="previous-page" disabled>Previous</button>
        <div class="current-page"></div>
        <button class="next-page">Next</button>
      </div>

    </div>
  </div>
</main>